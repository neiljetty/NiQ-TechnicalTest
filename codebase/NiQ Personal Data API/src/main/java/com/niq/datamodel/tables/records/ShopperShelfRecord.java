/*
 * This file is generated by jOOQ.
 */
package com.niq.datamodel.tables.records;


import com.niq.datamodel.tables.ShopperShelf;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShopperShelfRecord extends UpdatableRecordImpl<ShopperShelfRecord> implements Record3<String, String, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>NIQ.SHOPPER_SHELF.SHOPPER_ID</code>.
     */
    public void setShopperId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>NIQ.SHOPPER_SHELF.SHOPPER_ID</code>.
     */
    public String getShopperId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>NIQ.SHOPPER_SHELF.PRODUCT_ID</code>.
     */
    public void setProductId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>NIQ.SHOPPER_SHELF.PRODUCT_ID</code>.
     */
    public String getProductId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>NIQ.SHOPPER_SHELF.RELEVANCY_SCORE</code>.
     */
    public void setRelevancyScore(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>NIQ.SHOPPER_SHELF.RELEVANCY_SCORE</code>.
     */
    public BigDecimal getRelevancyScore() {
        return (BigDecimal) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, BigDecimal> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, BigDecimal> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ShopperShelf.SHOPPER_SHELF.SHOPPER_ID;
    }

    @Override
    public Field<String> field2() {
        return ShopperShelf.SHOPPER_SHELF.PRODUCT_ID;
    }

    @Override
    public Field<BigDecimal> field3() {
        return ShopperShelf.SHOPPER_SHELF.RELEVANCY_SCORE;
    }

    @Override
    public String component1() {
        return getShopperId();
    }

    @Override
    public String component2() {
        return getProductId();
    }

    @Override
    public BigDecimal component3() {
        return getRelevancyScore();
    }

    @Override
    public String value1() {
        return getShopperId();
    }

    @Override
    public String value2() {
        return getProductId();
    }

    @Override
    public BigDecimal value3() {
        return getRelevancyScore();
    }

    @Override
    public ShopperShelfRecord value1(String value) {
        setShopperId(value);
        return this;
    }

    @Override
    public ShopperShelfRecord value2(String value) {
        setProductId(value);
        return this;
    }

    @Override
    public ShopperShelfRecord value3(BigDecimal value) {
        setRelevancyScore(value);
        return this;
    }

    @Override
    public ShopperShelfRecord values(String value1, String value2, BigDecimal value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ShopperShelfRecord
     */
    public ShopperShelfRecord() {
        super(ShopperShelf.SHOPPER_SHELF);
    }

    /**
     * Create a detached, initialised ShopperShelfRecord
     */
    public ShopperShelfRecord(String shopperId, String productId, BigDecimal relevancyScore) {
        super(ShopperShelf.SHOPPER_SHELF);

        setShopperId(shopperId);
        setProductId(productId);
        setRelevancyScore(relevancyScore);
        resetChangedOnNotNull();
    }
}
